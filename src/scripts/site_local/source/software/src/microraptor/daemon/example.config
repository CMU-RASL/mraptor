#!/usr/bin/perl -w
# $Id: example.config,v 1.17 2004/11/25 05:22:05 brennan Exp $
######################################################################

# NOTE: to use this file, printConfigFile.perl must be in the user's path

# example of getting a variable value using arbitrary perl commands
$this_host = `hostname`;
chop $this_host;
$this_host =~ s/\..*$//;

# log_file: the name template is filled in as follows:
#   %n   replaced with process name
#   %u   replaced with a 4-digit number that makes the filename unique

# default setup for all processes, can override below
%d = ( log_file => "/tmp/mrlogs/%n_%u.log", host => $this_host );

# main config setup
$MR_CONFIG =
{
    groups => [
	init => "central",
	all_but_e => "a b c d",
	# dep1 causes a dependency cycle, dep2 doesn't because it
	# specifies to run in parallel
	dep1 => "c a",
	dep2 => "-p c a" 
   ],

    processes => [
	central => { %d, cmd => "central -lsi", ready => "Expecting 1" },
        env => { %d, cmd => "env" },
	a => { %d, cmd => "./counter a", env => { COUNTER => "xyz" },
	       ready => ": 4", kill_cmd => "kill -INT %p" },
	b => { %d, cmd => "touch foo", working_dir => "/tmp" },
	c => { %d, cmd => "bc", log_file => "/tmp/bc/%n_%u.log",
	       depends => ["a"] },
	# prints a long line (tests continuation functionality)
	d => { %d, cmd => "echo aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" },
	# test not running something because it's specified to run on another host

	e => { %d, cmd => "./counter e", host => "foo" },
        catchsigterm => { %d, cmd => "./catchsigterm",
	  backup_kill_cmd => "kill -INT %p", backup_kill_delay => 2 },
        mrmonitor => { %d, cmd => "/home/line/projects/microraptor/software/bin/linux2/mrmonitor -c /home/line/projects/microraptor/software/src/microraptor/utils/exampleWatchList.rcl" },
        mrmonitorGDB => { %d, cmd => "gdb /home/line/projects/microraptor/software/bin/linux2/mrmonitor" }
    ]
};

######################################################################
# DO NOT EDIT BELOW THIS POINT

# tell perl to look for printConfigFile.perl in the user's path
@INC = (split(/:/, $ENV{PATH}), @INC);
require "printConfigFile.perl";
&print_main($MR_CONFIG);

######################################################################
# $Log: example.config,v $
# Revision 1.17  2004/11/25 05:22:05  brennan
# *** empty log message ***
#
# Revision 1.16  2003/11/21 19:48:32  trey
# added catchsigterm
#
# Revision 1.15  2003/11/18 21:38:10  trey
# fixed @INC include path for newer versions of perl
#
# Revision 1.14  2003/06/25 03:37:14  brennan
# Updated compile instructions; made default release home the same as
# development.
#
# Revision 1.13  2003/03/30 19:47:11  brennan
# Massive changes in the guts of claw.  In response to the performance
# problems observed in the field, we now only instantiate one
# ProcessWidget per process and reparent the widget back and forth
# between the tabs of the notebook.  This resulted in zero observable
# change from the user standpoint (besides an unquantified performance
# bump during high-output situations and a slowdown in tab switching
# (since the widget gets unrealized and realized during a tab switch)).
# This needs to be stress-tested badly.
#
# Moved kill option in right-click menu to the bottom.  This is
# non-intuitive in that it doesn't occupy the same slot as "run", but it
# should reduce accidental clickage.  QUESTION: Would people prefer that
# "run" also gets moved to the end?
#
# Ordinalized swallowed windows with duplicate names (added numerical suffixes)
#
# Revision 1.12  2003/03/18 00:44:09  trey
# added custom kill command feature
#
# Revision 1.11  2003/03/15 18:49:53  trey
# changed config file reading so that processes appear in order in the claw display
#
# Revision 1.10  2003/03/14 23:22:40  mwagner
# modified simulator ready string to avoid relying on a partial line of output
#
# Revision 1.9  2003/03/12 15:51:03  trey
# added config for running central
#
# Revision 1.8  2003/03/11 01:52:36  trey
# modified get_config and set_config commands to add "groups" option to config file
#
# Revision 1.7  2003/03/10 22:55:22  trey
# added dependency checking
#
# Revision 1.6  2003/03/10 16:53:46  trey
# added ready monitoring
#
# Revision 1.5  2003/03/10 05:35:11  trey
# added get_clock command and ability of daemons to connect to each other
#
# Revision 1.4  2003/03/09 22:29:46  trey
# made log file names unique (changed log_dir to log_file with template patterns), added ability to suppress stdout history lines already received by client
#
# Revision 1.3  2003/02/26 15:48:35  trey
# fixed problem with printConfigFile.perl needing to be in the same dir as the config file
#
# Revision 1.2  2003/02/26 05:08:45  trey
# streamlined config file format
#
# Revision 1.1  2003/02/24 22:09:21  trey
# fixed reading of perl config files
#
#
